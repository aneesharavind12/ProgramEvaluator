package com.testing.web.dao;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.io.OutputStreamWriter;
import java.util.ArrayList;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;

import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;

import com.sun.javafx.scene.paint.GradientUtils.Parser;

import org.json.simple.*;

public class Evaluate {
	 
	public String evaluatingUserFile(String programName, String numberOfTestCases,String userTestCases,String code){
		
		String userFileName =  "user.c";
		File f1 = new File("E:/EvaluatorDatabase/User/" + userFileName);
		try {
			f1.createNewFile();
			FileWriter writeCode = new FileWriter(f1);
			writeCode.write(code);
			writeCode.close();
		} catch (IOException e1) {
			// TODO Auto-generated catch block
			e1.printStackTrace();
		}

		int noOfTestCases = Integer.parseInt(numberOfTestCases);
		JSONArray inputs = new JSONArray();
		String adminFileName = "";
		String getNumberOfInputs = "";
		
		
		FileReader file;
		try {
			file = new FileReader("E:/EvaluatorDatabase/Admin/admin.json");
			JSONArray adminData = (JSONArray) new JSONParser().parse(file);
			
			JSONObject readObject = new JSONObject();
			
			for(Object obj : adminData){
				readObject = (JSONObject) obj;
				if(readObject.get("programName").equals(programName)){
					inputs = (JSONArray) readObject.get("inputs");
					adminFileName = (String) readObject.get("cFileName");
					getNumberOfInputs = (String) readObject.get("numberOfInputs");
					
				}
			}
            int numberOfInputs = Integer.parseInt(getNumberOfInputs);
			System.out.println(inputs);
			JSONParser parser = new JSONParser();  
			JSONArray userTestCasesArray = new JSONArray();
			userTestCasesArray =  (JSONArray) parser.parse(userTestCases);  
			System.out.println(userTestCasesArray);
			
			JSONArray getArray = new JSONArray();
			
			JSONArray storeTestCasesArray = new JSONArray();
			
			
		
			
			String read = "";
			
			
		for(Object obj1 : userTestCasesArray){
			getArray = (JSONArray) obj1;
			System.out.println(getArray);
			JSONObject storeTestCasesObject = new JSONObject();
			int index = 0;
			for(int i = 0; i <= numberOfInputs;i++){
				if(index < numberOfInputs){
					read = (String)getArray.get(index);
					if (read.equals("")){
						break;
					}
					read = read.trim();
					storeTestCasesObject.put("input" + " " + Integer.toString(index + 1),read);
				}
				else {
					read = (String)getArray.get(index);
					if (read.equals("")){
						break;
					}
					read = read.trim();
					storeTestCasesObject.put("ExpectedOutput",read);
					
				}
				
				index++;
			}

			storeTestCasesArray.add(storeTestCasesObject);		
		}

		System.out.println(storeTestCasesArray);
		JSONArray autoGeneratedTestCases = new JSONArray();
		autoGeneratedTestCases = Utility.testcasesGenerator(inputs, adminFileName, noOfTestCases,numberOfInputs);
		System.out.println(autoGeneratedTestCases);

		JSONObject copyArray = new JSONObject();
		for(Object obj : autoGeneratedTestCases ){
			copyArray = (JSONObject) obj;
			storeTestCasesArray.add(copyArray);
		}
//		
//		System.out.println(successCaseArray.size());
//		for(int i = 0; i < successCaseArray.size();i++){
//			successCaseArray.remove(i);
//		}
//		
//		for(int i = 0; i < failCaseArray.size();i++){
//			failCaseArray.remove(i);
//		}
//		String userExeFileName = Utility.compile(cFileName,"E:/EvaluatorDatabase/User/");
//		ExecutorService executor = Executors.newFixedThreadPool(10);
//		JSONObject sendtestCase = new JSONObject();
//		   for(Object obj : storeTestCasesArray){
//			   sendtestCase = (JSONObject)obj;
//			   EvaluatorThread evaluate = new EvaluatorThread(sendtestCase,userExeFileName);
//			   executor.execute(evaluate);
//		   }
//		   executor.shutdown();  
//		   while (!executor.isTerminated()) {   }  
//	 
//		   System.out.println("Finished all threads");  
		JSONArray successCaseArray = new JSONArray();
		JSONArray failCaseArray = new JSONArray();
		JSONObject checkObject = new JSONObject();
		System.out.println(userFileName);
		String userExeFileName = Utility.compile(userFileName,"E:\\EvaluatorDatabase\\User\\");
		System.out.println(userExeFileName);
			for (Object obj : storeTestCasesArray ){
				
				checkObject = (JSONObject) obj;
				String input = "";
				for(int i = 0;i<numberOfInputs;i++){
					input = input +  (String) checkObject.get("input" + " " + Integer.toString(i + 1)) + " ";
				}
				System.out.println(input);
//				String input = (String) checkObject.get("input");

				File dir = new File("E:/EvaluatorDatabase/User/");
				Process run = Runtime.getRuntime().exec("cmd /C E:/EvaluatorDatabase/User/" + userExeFileName, null, dir);
                OutputStream os = run.getOutputStream();
                BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(os));

                

                bw.write(input);

                bw.close();

                BufferedReader in = new BufferedReader(new InputStreamReader(run.getInputStream()));
                String line = null;
                String output = "";

                while ((line = in.readLine()) != null) {
                    output = output + line + " ";
                }
                output = output.trim();

                checkObject.put("Your Output",output);
                if(checkObject.get("ExpectedOutput").equals(output)){
                	checkObject.put("Result","Success");
                	successCaseArray.add(checkObject);
                }
                else {
                	checkObject.put("Result", "Failed");
                	failCaseArray.add(checkObject);
                }
		}           
            	
		    JSONArray resultArray = new JSONArray();
			JSONObject tempObject = new JSONObject();
			for(Object obj2 : failCaseArray){
				tempObject = (JSONObject) obj2;
				resultArray.add(tempObject);
			}
			for(Object obj1 : successCaseArray){
				tempObject = (JSONObject) obj1;
				resultArray.add(tempObject);
			}
			
			System.out.println(resultArray);
		
			File deleteUserExe = new File("E:\\EvaluatorDatabase\\User\\"+ userExeFileName);
			deleteUserExe.delete();
			File deleteUserFile = new File("E:\\EvaluatorDatabase\\User\\"+ userFileName);
			deleteUserFile.delete();
		    System.out.println(resultArray);
			return resultArray.toJSONString();
			
			
		
	
		
	} catch (Exception e) {
			
			System.out.println(e);
		}	
		return null;
		

}
}
